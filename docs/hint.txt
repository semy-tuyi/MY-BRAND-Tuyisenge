/ DOM Elements
const studentForm = document.getElementById("studentForm");
const studentsContainer = document.querySelector(".students");
const nameInput = studentForm["name"];
const ageInput = studentForm["age"];
const rollInput = studentForm["roll"];

/* 
{
  name: '',
  age: number,
  roll: number
}
*/

const students = JSON.parse(localStorage.getItem("students")) || [];

const addStudent = (name, age, roll) => {
  students.push({
    name,
    age,
    roll,
  });

  localStorage.setItem("students", JSON.stringify(students));

  return { name, age, roll };
};

const createStudentElement = ({ name, age, roll }) => {
  // Create elements
  const studentDiv = document.createElement("div");
  const studentName = document.createElement("h2");
  const studentAge = document.createElement("p");
  const studentRoll = document.createElement("p");

  // Fill the content
  studentName.innerText = "Student name: " + name;
  studentAge.innerText = "Student age: " + age;
  studentRoll.innerText = "Student roll: " + roll;

  // Add to the DOM
  studentDiv.append(studentName, studentAge, studentRoll);
  studentsContainer.appendChild(studentDiv);

  studentsContainer.style.display = students.length === 0 ? "none" : "flex";
};

studentsContainer.style.display = students.length === 0 ? "none" : "flex";

students.forEach(createStudentElement);

studentForm.onsubmit = e => {
  e.preventDefault();

  const newStudent = addStudent(
    nameInput.value,
    ageInput.value,
    rollInput.value
  );

  createStudentElement(newStudent);

  nameInput.value = "";
  ageInput.value = "";
  rollInput.value = "";
};

// hint 2
const signUp = e => {
    let fname = document.getElementById('fname').value,
        lname = document.getElementById('lname').value,
        email = document.getElementById('email').value,
        pwd = document.getElementById('pwd').value;

        //retrieve data from local storage as object
    let formData = JSON.parse(localStorage.getItem('formData')) || [];

    let exist = formData.length && 
        JSON.parse(localStorage.getItem('formData')).some(data => 
            data.fname.toLowerCase() == fname.toLowerCase() && 
            data.lname.toLowerCase() == lname.toLowerCase()
        );

    if(!exist){
        formData.push({ fname, lname, email, pwd });
        // store data in local storage as string value 
        // local storage store data as string value
        localStorage.setItem('formData', JSON.stringify(formData));
        document.querySelector('form').reset();
        document.getElementById('fname').focus();
        alert("Account Created.\n\nPlease Sign In using the link below.");
    }
    else{
        alert("Ooopppssss... Duplicate found!!!\nYou have already sigjned up");
    }
    e.preventDefault();
}

function signIn(e) {
    let email = document.getElementById('email').value, pwd = document.getElementById('pwd').value;
    let formData = JSON.parse(localStorage.getItem('formData')) || [];
    let exist = formData.length && 
    JSON.parse(localStorage.getItem('formData')).some(data => data.email.toLowerCase() == email && data.pwd.toLowerCase() == pwd);
    if(!exist){
        alert("Incorrect login credentials");
    }
    else{
        location.href = "/";
    }
    e.preventDefault();
}

// ck editor 5
let theEditor;

ClassicEditor.create(document.querySelector("#contentDetails"), {
  ckfinder: {
    uploadUrl:
      "/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Files&responseType=json",
  },
  mediaEmbed: {
    previewsInData: true,
  },
})
  .then((editor) => {
    theEditor = editor;
  })
  .catch((error) => {
    console.error(error);
  });

function getDataFromTheEditor() {
  return theEditor.getData();
}

function showtext() {
    console.log(getDataFromTheEditor());
  }


// other local storage hint
CKEDITOR.replace("body");

    if (localStorage.getItem("updateId")) {
      let id = localStorage.getItem("updateId");

      document.getElementById("cover").style.display = "none";
      document.getElementById("submitBtn").value = "UPDATE";

      var articles = JSON.parse(localStorage.getItem("articles"));
      var articleToUpdate = articles.filter((item) => item.id == id);
      articles = articles.filter((item) => item.id != id);

      document.getElementById("title").value = articleToUpdate[0].title;
      document.getElementById("body").value = articleToUpdate[0].body;
      document.getElementById("tag").value = articleToUpdate[0].tag;

      document
        .getElementById("AddArticleForm")
        .addEventListener("submit", (event) => {
          event.preventDefault();

          const title = document.getElementById("title").value;
          const body = CKEDITOR.instances.body.getData();
          const tag = document.getElementById("tag").value;
          const Article = {
            id,
            title,
            body,
            image: articleToUpdate[0].image,
            tag,
            comments: articleToUpdate[0].comments,
            likes: articleToUpdate[0].likes,
            postedDate: articleToUpdate[0].postedDate,
          };

          articles.push(Article);
          localStorage.setItem("articles", JSON.stringify(articles));

          window.open("./view-article.html", "self");
        });
    } else {
      document.getElementById("file").required = "";
      var image;
      document.getElementById("file").addEventListener("change", (e) => {
        const file = e.target.files[0];
        const reader = new FileReader();
        reader.onloadend = () => {
          const base64String = reader.result
            .replace("data:", "")
            .replace(/^.+,/, "");
          image = base64String;
          // document.body.style.background = `url(data:image/png;base64,${base64String})`;
        };
        reader.readAsDataURL(file);
      });

      document
        .getElementById("AddArticleForm")
        .addEventListener("submit", (event) => {
          event.preventDefault();
          const title = document.getElementById("title").value;
          const body = CKEDITOR.instances.body.getData();
          const tag = document.getElementById("tag").value;

          var today = new Date();
          var dd = String(today.getDate()).padStart(2, "0");
          var mm = String(today.getMonth() + 1).padStart(2, "0"); //January is 0!
          var yyyy = today.getFullYear();

          today = dd + "/" + mm + "/" + yyyy;

          const postedDate = today;
          const Article = {
            id: Math.floor(Math.random() * 1000000),
            title,
            body,
            image: image,
            tag,
            comments: [],
            likes: [],
            postedDate,
          };
          var articles = JSON.parse(localStorage.getItem("articles") || "[]");
          // Put the object into storage
          articles.push(Article);
          localStorage.setItem("articles", JSON.stringify(articles));
          window.open("./view-article.html", "self");
        });
    
      let 
    if(data == null){
      alert("incorect credentials")
    }else if( dat.forEach(item => {
      data.email === email && 
    })){
      location.assign('dashbord.html')
    }else{
      alert('data not found')

    }
